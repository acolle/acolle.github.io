(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{"+M+Z":function(e,t,a){e.exports={projects:"project-module--projects--3tFfs",projectContainer:"project-module--projectContainer--2v8E5",tags:"project-module--tags--1Y65z",tag:"project-module--tag--2CHh7",urlContainer:"project-module--urlContainer--13kBA",logo:"project-module--logo--13rBM"}},"16l3":function(e,t,a){"use strict";a.r(t);var n=a("LuSU"),s=a("q1tI"),i=a.n(s),o=a("Bl7J"),r=(a("f3/d"),a("+M+Z")),l=a.n(r),c=function(e){var t=e.data;return i.a.createElement("div",{className:l.a.projectContainer},i.a.createElement("div",null,i.a.createElement("h5",null,t.name),i.a.createElement("p",null,t.description)),i.a.createElement("div",{className:l.a.urlContainer},t.urls.map((function(e,t){return""!==e.value?i.a.createElement("a",{key:t+1,href:e.value,target:"_blank",rel:"noopener noreferrer"},i.a.createElement("img",{src:"/icons/"+e.name+".png",alt:""+e.name,className:l.a.logo})):i.a.createElement("span",{key:t+1,style:{display:"none"}})}))))},m=a("kl0w"),p=a.n(m),u=a("vrFN");t.default=function(){var e=n.data;return i.a.createElement(o.a,null,i.a.createElement(u.a,{title:"Projects"}),i.a.createElement("div",{className:p.a.section},i.a.createElement("h4",null,"Live Projects"),i.a.createElement("div",{className:l.a.projects},e.dataJson.liveProjects.map((function(e,t){return i.a.createElement(c,{key:t+1,data:e})})))),i.a.createElement("div",{className:p.a.section},i.a.createElement("h4",null,"Other projects"),i.a.createElement("div",{className:l.a.projects},e.dataJson.sideProjects.map((function(e,t){return i.a.createElement(c,{key:t+1,data:e})})))))}},LuSU:function(e){e.exports=JSON.parse('{"data":{"dataJson":{"liveProjects":[{"name":"SOCCA","description":"A virtual caf√© where people from all backgrounds and horizons can meet up for a few minutes to learn new things, share ideas and challenge their beliefs.","tags":["react","node.js","socket.io","nongoDB","redis"],"urls":[{"name":"website","value":"https://socca.io/"}]}],"sideProjects":[{"name":"Chat Application","description":"A chat application built on Node.js with Express and Socket.IO. Users select a username and a chat room where they can then chat with all the other users currently in it","tags":["node.js","socket.io","mustache"],"urls":[{"name":"github","value":"https://github.com/acolle/node-v3-chat-app/"},{"name":"website","value":"https://acolle-node-v3-chat-app.herokuapp.com/"}]},{"name":"Expense Tracker","description":"An application built with React that lets users track their expenses. Authentication is handled with Firebase, state management with Redux and testing with Enzyme","tags":["react","firebase","redux","enzyme","express"],"urls":[{"name":"github","value":"https://github.com/acolle/react-expensify-app/"},{"name":"website","value":""}]},{"name":"User Matching System","description":"A Node.js application built with Express that uses Socket.IO to match users based on the information they provide, as well as the type of match they\'re looking for. Front end is Vanilla JS with CSS framework Bulma","tags":["node.js","express","socket.io","Vanilla JS"],"urls":[{"name":"github","value":"https://github.com/acolle/matching-system-socket-io"},{"name":"website","value":"https://acolle-matching-system.herokuapp.com/"}]},{"name":"Form Validation Client Side","description":"A basic implementation of form validation on the client side using the two most common types: built-in form validation using HTML5 form validation features and JavaScript validation","tags":["javascript","html5","form"],"urls":[{"name":"github","value":"https://github.com/acolle/client-form-validation"},{"name":"website","value":"/projects/client-form-validation"}]},{"name":"Weather Forecast","description":"A Node.js application built with Express that gives weather forecast. It uses the Mapbox API to get coordinates based on location and the Darksky API to provide the actual forecast based on latitude and longitude","tags":["node.js","express","hbs","3rd Party API"],"urls":[{"name":"github","value":"https://github.com/acolle/weather-web-app/"},{"name":"website","value":"https://acolle-weather-app.herokuapp.com/"}]},{"name":"Loading Spinner","description":"A simple loading spinner implemented in React. The loading spinner is displayed once the client makes a request to the server which takes 4 seconds to complete. Once completed, the spinner disappears to show the response from the server","tags":["react","animation","express"],"urls":[{"name":"github","value":"https://github.com/acolle/loading-spinner-react"},{"name":"website","value":""}]},{"name":"Virtual Rendering","description":"A React implementation of Virtual Rendering to prevent slow and laggy scrolling of large lists. Virtual Rendering is implemented using react-virtualized and avatars are provided by DiceBear Avatars.","tags":["react"],"urls":[{"name":"github","value":"https://github.com/acolle/virtual-rendering-react"},{"name":"website","value":""}]}]}}}')}}]);
//# sourceMappingURL=component---src-pages-projects-js-1fa04ada062f7c7064f7.js.map